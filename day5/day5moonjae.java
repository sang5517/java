package day5;

public class day5moonjae {

    // 설명
    int x;

    // 변수x라는 객체가 있다.
    // 정수형 변수 'x'를 선언함.int라는 ㅠ정수를



    // 설명
   // x = 20;

    // 변수x는 20이다.






// 문제 : 레퍼런스변수에 값 할당과정 설명

    public static void main(String[] args) {



    // 설명
   // 자동차 a자동차;

    // 메인 함수가 시작되면  a자동차라는 변수가 스택 영역에 만들어짐
    // 자동차 클래스에 인스턴스를 저장할 수있는 래퍼런스 변수 a 자동차를 선언
        // 이시점까지 아직 어떤객체도 a자동차에 지정되지 않았음.
        // 아직 null값을 가지고있음
        // 현재는 아무것도 넣지 않았기 때문에 비어있따고 볼 수 있따.
    // 설명
  //  a자동차 = new 자동차();
    //new 자동차 코드를 사용하여 자동차 클래스이 새로운 인스턴스를 생성
        //  a자동차는 이제 새로운 객체를 가리킴
        // new 자동치()를 하면 힙에 자동차 클래스를 본딴 객체가 힙에 만들어진다.
        // 그와 동시에 객체를 조종할 수 있는 (연결되어 있는) 리모컨도 함께 만들어진다.
        // 리모컨은 스택에 저장할 수 있고 a 자동차 변수에 저장한다.
        // a자동차에 있는 리모컨을 이용해서 연결된 자동차에 명령을 내린다
        // 연결된 객체(자동차)가 작동한다.

    // 설명
   // a자동차.달리다();
// a자동차가 가리키는 자동차 객체에 대해 달리다라는 메서드 호출 그렇게되면 자동차 객체는 행동을 수행하게됨,
    // 모든 객체들은 서로를 평생 볼 수 없다.
    // 모든 객체들은 서로를 원격조종한다.


}
//}

// 자동차 설계도!, 절대 자동차가 아니다.!!!
//class 자동차 {
    // 이 메서드(함수)의 2가지 용도
    // - ???
    // - ???
    void 달리다() {
        System.out.println("자동차가 달립니다.");







        // 설명
      //  자동차 a자동차;


        // 설명
      //  a자동차 = new 자동차();


        // 설명
     //   a자동차.달리다();
    }
}

// class => 설계도, 틀(객체를 만들기 위한)
//class 자동차 {
    // 달리다 함수/메서드
 //   void 달리다() {
//        System.out.println("자동차가 달립니다.");


//}}
